<Application x:Class="MilitaryFaculty.Presentation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:custom="clr-namespace:MilitaryFaculty.Presentation.Custom"
             Startup="App_OnStartup">
    <Application.Resources>
        <custom:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="BorderSolidBrush">
            <SolidColorBrush.Color>
                <Color A="255" 
                       R="225"
                       G="225"
                       B="240"/>
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <Style TargetType="Control">
            <Setter Property="FontFamily" Value="Calibri"/>
        </Style>

        <Style x:Key="TextBlock" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="H1TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
            <Setter Property="Margin" Value="0, 4, 5, 8"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <Style x:Key="H2TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
            <Setter Property="Margin" Value="0, 2, 5, 5"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <Style x:Key="H3TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <Style x:Key="LabelTextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
            <Setter Property="Padding" Value="4 6"/>
            <Setter Property="Margin" Value="2, 2"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style x:Key="ValueTextBlock" TargetType="TextBlock" BasedOn="{StaticResource LabelTextBlock}">
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="Margin" Value="2, 2"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ValueMultilineTextblock" TargetType="TextBlock" BasedOn="{StaticResource ValueTextBlock}">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="TextAlignment" Value="Justify"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="ValueTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBox}">
            <Setter Property="Padding" Value="4 4"/>
            <Setter Property="Margin" Value="2, 2"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ValueMultilineTextbox" TargetType="TextBox" BasedOn="{StaticResource ValueTextBox}">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
        </Style>

        <Style x:Key="ValueDatePicker" TargetType="DatePicker">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="4 4"/>
            <Setter Property="Margin" Value="2, 2"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ValueComboBox" TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="Margin" Value="2, 2"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10 4.5"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SimpleButton" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5, 2"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <Style x:Key="SimpleBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource BorderSolidBrush}"/>
            <Setter Property="BorderThickness" Value="0.6"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="15, 10"/>
        </Style>

        <Style x:Key="SimpleExpander" TargetType="Expander">
            <Setter Property="IsExpanded" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3 5"/>
        </Style>

        <Style x:Key="ImagedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter 
                            Content="{TemplateBinding Property=Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Cursor="{TemplateBinding Property=Cursor}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavigationImageStyle" TargetType="Image">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Margin" Value="1.5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Margin" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CommandImageStyle" TargetType="Image">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Margin" Value="1.5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="Margin" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ImageMenuItem" TargetType="MenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <ContentPresenter Content="{TemplateBinding Property=Header}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
