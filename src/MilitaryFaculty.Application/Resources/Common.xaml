<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:MilitaryFaculty.Presentation.ViewModels;assembly=MilitaryFaculty.Presentation"
                    xmlns:markup="clr-namespace:MilitaryFaculty.Presentation.Markup;assembly=MilitaryFaculty.Presentation"
                    xmlns:custom="clr-namespace:MilitaryFaculty.Application.Custom"
                    xmlns:widgets="clr-namespace:MilitaryFaculty.Application.Views.Widgets"
                    xmlns:command="clr-namespace:MilitaryFaculty.Presentation.Widgets.Command;assembly=MilitaryFaculty.Presentation"
                    xmlns:entity="clr-namespace:MilitaryFaculty.Application.Views.Entity">
    <custom:GenericTemplateSelector x:Key="TemplateSelector" />

    <DataTemplate DataType="{x:Type command:ImagedCommandViewModel}">
        <widgets:ImagedCommand />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:ViewModel}">
        <entity:Default />
    </DataTemplate>

    <SolidColorBrush x:Key="BorderSolidBrush">
        <SolidColorBrush.Color>
            <Color A="255"
                   R="225"
                   G="225"
                   B="240" />
        </SolidColorBrush.Color>
    </SolidColorBrush>

    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="Calibri" />
    </Style>

    <Style x:Key="TextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="H1TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Margin" Value="0, 4, 5, 8" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="H2TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Margin" Value="0, 2, 5, 5" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="H3TextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="LabelTextBlock" TargetType="TextBlock" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Padding" Value="4 6" />
        <Setter Property="Margin" Value="2, 2" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="ValueTextBlock" TargetType="TextBlock" BasedOn="{StaticResource LabelTextBlock}">
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ValueMultilineTextblock" TargetType="TextBlock" BasedOn="{StaticResource ValueTextBlock}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextAlignment" Value="Justify" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="ValueTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBox}">
        <Setter Property="Padding" Value="4 4" />
        <Setter Property="Margin" Value="2, 2" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ValueMultilineTextbox" TargetType="TextBox" BasedOn="{StaticResource ValueTextBox}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
    </Style>

    <TextBox x:Key="ValueDatePickerHiddenTextBox"
            x:Name="ValueDatePickerHiddenTextBox"
            Style="{StaticResource ValueTextBox}"
            Visibility="Collapsed" />

    <Style x:Key="ValueDatePicker" TargetType="DatePicker">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="4 4" />
        <Setter Property="Margin" Value="2, 2" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" 
                Value="1" />
        <Setter Property="BorderBrush" Value="LightSteelBlue"   />
    </Style>

    <Style x:Key="ValueComboBox" TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="Margin" Value="2, 2" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Padding" Value="10 4.5" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleButton" TargetType="Button">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5, 2" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="MaxWidth" Value="200"/>
    </Style>

    <Style x:Key="SimpleBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderSolidBrush}" />
        <Setter Property="BorderThickness" Value="0.6" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="15, 10" />
    </Style>

    <Style x:Key="SimpleExpander" TargetType="Expander">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="3 5" />
    </Style>

    <Style x:Key="ImagedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter
                        Content="{TemplateBinding Property=Content}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Cursor="{TemplateBinding Property=Cursor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationImageStyle" TargetType="Image">
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="1.5" />
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter Property="Width" Value="18" />
                <Setter Property="Margin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandImageStyle" TargetType="Image">
        <Setter Property="Width" Value="12" />
        <Setter Property="Margin" Value="1.5" />
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter Property="Width" Value="15" />
                <Setter Property="Margin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageMenuItem" TargetType="MenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <ContentPresenter Content="{TemplateBinding Property=Header}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommandsItemControlStyle"
           TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemStyle" TargetType="ItemsControl">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Style="{StaticResource SimpleBorder}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Style="{StaticResource H2TextBlock}"
                                Text="{Binding Title}" />
                            <ContentPresenter
                                Grid.Row="1"
                                Content="{TemplateBinding Property=Content}"
                                ContentTemplateSelector="{StaticResource TemplateSelector}" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandItemStyle" TargetType="ItemsControl">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Style="{StaticResource SimpleBorder}">
                        <Expander Style="{StaticResource SimpleExpander}">
                            <Expander.Header>
                                <!--Header width hack by binding OneWayToSource-->
                                <Grid
                                    HorizontalAlignment="{Binding HorizontalAlignment, 
                                                                  RelativeSource={RelativeSource FindAncestor,
                                                                                                 AncestorType={x:Type ContentPresenter}
                                                         },       Mode=OneWayToSource}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!--Header text-->
                                    <TextBlock
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        Style="{StaticResource H3TextBlock}"
                                        Text="{Binding Title}"
                                        Cursor="Hand" />
                                    <!--Header commands-->
                                    <ItemsControl
                                        Grid.Column="1"
                                        ItemsSource="{Binding Commands}"
                                        Visibility="{Binding IsExpanded, 
                                                             RelativeSource={RelativeSource FindAncestor,
                                                                                            AncestorType={x:Type Expander}},
                                                             Converter={markup:BoolToVisibilityConverter}
                                                    }"
                                        Style="{StaticResource CommandsItemControlStyle}" />
                                </Grid>
                            </Expander.Header>
                            <!--Item content-->
                            <ContentPresenter Content="{TemplateBinding Property=Content}"
                                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                                              ContentTemplateSelector="{StaticResource TemplateSelector}" />
                        </Expander>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EnumComboBox" TargetType="ComboBox" BasedOn="{StaticResource ValueComboBox}">
        <Setter Property="ItemsSource"
                Value="{Binding SelectedValue, 
                                RelativeSource={RelativeSource Self},
                                Converter={markup:EnumToValuesConverter}
                       }" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Text="{Binding Converter={markup:EnumToNameConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="PART_BORDER"
                            Margin="2, 1"
                            Padding="2"
                            BorderThickness="0.4"
                            BorderBrush="{StaticResource BorderSolidBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!--Content-->
                            <ContentPresenter
                                x:Name="PART_CONTENT"
                                Grid.Column="0"
                                Content="{TemplateBinding Property=Content}"
                                ContentTemplate="{TemplateBinding Property=ContentTemplate}"
                                ContentTemplateSelector="{StaticResource TemplateSelector}"
                                Cursor="Hand" />
                            <!--Commands-->
                            <ItemsControl
                                Grid.Column="1"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Margin="0 7 5 0"
                                ItemsSource="{Binding Commands}"
                                Visibility="{TemplateBinding Property=IsSelected, 
                                                             Converter={markup:BoolToVisibilityConverter}
                                            }"
                                Style="{StaticResource CommandsItemControlStyle}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_BORDER" Property="BorderBrush" Value="CornflowerBlue" />
                            <Setter TargetName="PART_BORDER" Property="BorderThickness" Value="0.6" />
                            <Setter TargetName="PART_BORDER" Property="Margin" Value="1.8 0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemListStyle" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <Style TargetType="TextBlock" x:Key="FontAwesomeTextBlock">
        <Setter Property="FontFamily" Value="/Content/fonts/#FontAwesome" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="#404040"/>
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter Property="FontSize" Value="23" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>